SET SQL_SAFE_UPDATES = 0;


UPDATE `stretchy_report` SET `report_sql`='select \n    custinv.client_id as `CUST. ID`,\n    custinv.name as `NAME`,\n    custinv.office as `OFFICE`,\n    custinv.invoiceAmount as `INVOICE AMOUNT`,\n    bdr.depositAmount as `DEPOSIT AMOUNT`,\n    (adjust.debitAdjustment) + (bdr.debitcustomerAmount) as `DEBIT ADJUSTMENT`,\n    (adjust.creditAdjustment) + (bdr.creditServiceAmount) as `CREDIT ADJUSTMENT`,\n    bdr.refundAmount as `REFUND AMOUNT`,\n    ifnull(cast(round(sum(pay.amount_paid), 2) as char),0) as `COLLECTION AMOUNT`,\n    cast(round(ifnull(custinv.invoiceAmount,0) + ifnull(bdr.depositAmount, 0) + ifnull(adjust.debitAdjustment, 0) \n    + ifnull(bdr.debitcustomerAmount, 0) - ifnull(sum(pay.amount_paid), 0) - ifnull(creditAdjustment, 0) - ifnull(bdr.refundAmount, 0) - ifnull(bdr.creditServiceAmount, 0))as char) as \'BALANCE\'\nfrom\n    ((select \n        cust.account_no as customerNo,\n            cust.display_name as Name,\n            cust.id as client_id,\n            off.id as office_id,\n            off.name as Office,\n            cast(round(sum(inv.invoice_amount), 2) as char) as invoiceAmount\n    from\n        m_client cust join m_office off ON  cust.office_id = off.id\n        left join b_bill_item inv ON cust.id = inv.client_id\n    group by cust.id\n    Order by cust.id) custinv\n    left outer join b_payments pay ON custinv.client_id = pay.client_id\n    left outer join (SELECT \n        ADJ.CLIENT_ID,\n            sum(ADJ.DBADJ) as debitAdjustment,\n            sum(ADJ.CRADJ) as creditAdjustment\n    FROM\n        (SELECT \n        ba.client_id,\n            ba.adjustment_type,\n            SUM((CASE adjustment_type\n                WHEN \'DEBIT\' THEN adjustment_amount\n                ELSE 0\n            END)) AS DBADJ,\n            SUM((CASE adjustment_type\n                WHEN \'CREDIT\' THEN adjustment_amount\n                ELSE 0\n            END)) AS CRADJ\n    FROM\n        b_adjustments ba\n    GROUP BY ba.client_id , ba.adjustment_type) AS ADJ\n    GROUP BY ADJ.CLIENT_ID) adjust ON custinv.client_id = adjust.client_id\n    left outer join (SELECT \n        BDR.clientId AS clientId,\n            TRUNCATE(sum(BDR.debitcustomerAmount),2) as debitcustomerAmount,\n            TRUNCATE(sum(BDR.creditServiceAmount),2) as creditServiceAmount,\n            TRUNCATE(sum(BDR.depositAmount),2) AS depositAmount,\n            TRUNCATE(sum(BDR.creditAmount),2) AS refundAmount\n    FROM\n        (SELECT \n        client_id AS clientId,\n            transaction_type AS transactionType,\n            SUM((CASE description\n                WHEN \'Deposit\' THEN debit_amount\n                ELSE 0\n            END)) AS depositAmount,\n            SUM((CASE description\n                WHEN \'Refund\' THEN credit_amount\n                ELSE 0\n            END)) AS creditAmount,\n            SUM((CASE description\n                WHEN \'Payment Towards Refund Entry\' THEN debit_amount\n                ELSE 0\n            END)) AS debitcustomerAmount,\n            SUM((CASE description\n                WHEN \'Refund Adjustment towards Service Balance\' THEN credit_amount\n                ELSE 0\n            END)) AS creditServiceAmount\n    FROM\n        b_deposit_refund\n    where\n        description in (\'Deposit\' , \'Refund\', \'Refund Adjustment towards Service Balance\', \'Payment Towards Refund Entry\')\n    GROUP BY client_id , transaction_type) AS BDR\n    GROUP BY clientId) bdr ON bdr.clientId = custinv.client_id) where custinv.office_id=\'${officeId}\' or -1 = \'${officeId}\'\nGROUP BY custinv.client_id\nORDER BY custinv.client_id' WHERE report_name='Customer Outstanding Report';

SET SQL_SAFE_UPDATES = 1;
